apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: fleet-server
  namespace: placeholder
spec:
  version: 8.6.1
  kibanaRef:
    name: kibana
  elasticsearchRefs:
    - name: elasticsearch
  mode: fleet
  fleetServerEnabled: true
  deployment:
    replicas: 1
    podTemplate:
      spec:
        serviceAccountName: elastic-agent
        automountServiceAccountToken: true
        securityContext:
          runAsUser: 0
---
apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: elastic-agent
  namespace: placeholder
spec:
  version: 8.6.1
  kibanaRef:
    name: kibana
  fleetServerRef:
    name: fleet-server
  mode: fleet
  daemonSet:
    podTemplate:
      spec:
        serviceAccountName: elastic-agent
        automountServiceAccountToken: true
        securityContext:
          runAsUser: 0
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: kibana
  namespace: placeholder
spec:
  version: 8.6.1
  # podTemplate:
  #   spec:
  #     containers:
  #       - name: kibana
  #         resources:
  #           requests:
  #             memory: 500M
  #             cpu: 70m
  #           limits:
  #             memory: 1024M
  #             cpu: 300m
  count: 1
  elasticsearchRef:
    name: elasticsearch
  config:
    server.maxPayloadBytes: 2621440
    server.publicBaseUrl: 'https://elk.thedodo.xyz'
    xpack.fleet.agents.elasticsearch.hosts: ['https://elk.thedodo.xyz/elastic-agent-es/', 'https://elasticsearch-es-http:9200']
    xpack.fleet.agents.fleet_server.hosts: ['https://elk.thedodo.xyz/fleet-server/', 'https://fleet-server-agent-http:8220']
    xpack.fleet.packages:
      - name: system
        version: latest
      - name: elastic_agent
        version: latest
      - name: fleet_server
        version: latest
      - name: windows
        version: latest
      - name: endpoint
        version: latest
      - name: osquery_manager
        version: latest
      - name: osquery
        version: latest
    xpack.fleet.agentPolicies:
      - name: Fleet Server on ECK policy
        id: eck-fleet-server
        is_default_fleet_server: true
        namespace: default
        monitoring_enabled:
          - logs
          - metrics
        unenroll_timeout: 900
        package_policies:
          - name: fleet_server
            id: fleet_server
            package:
              name: fleet_server
      - name: Elastic Agent policy
        id: eck-agent
        namespace: default
        monitoring_enabled:
          - logs
          - metrics
        unenroll_timeout: 900
        is_default: true
        package_policies:
          - name: system
            id: system
            package:
              name: system
      - name: '[WIN] Elastic Agent policy'
        id: eck-agent-win
        namespace: windows
        monitoring_enabled:
          - logs
          - metrics
        unenroll_timeout: 900
        package_policies:
          - name: system
            id: system
            package:
              name: system
          - name: osquery
            id: osquery
            package:
              name: osquery
          - name: osquery-manager
            id: osquery-manager
            package:
              name: osquery_manager
          - name: windows
            id: windows
            package:
              name: windows
          - name: elastic-defend
            id: elastic-defend
            package:
              name: endpoint
---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch
  namespace: placeholder
spec:
  version: 8.6.1
  nodeSets:
    - name: default
      count: 1
      config:
        node.store.allow_mmap: false
      podTemplate:
        spec:
          containers:
            - name: elasticsearch
              resources:
                requests:
                  memory: 2Gi
                limits:
                  memory: 3Gi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: elastic-agent
rules:
  - apiGroups: [''] # "" indicates the core API group
    resources:
      - pods
      - nodes
      - namespaces
    verbs:
      - get
      - watch
      - list
  - apiGroups: ['coordination.k8s.io']
    resources:
      - leases
    verbs:
      - get
      - create
      - update
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elastic-agent
  namespace: placeholder
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: elastic-agent
subjects:
  - kind: ServiceAccount
    name: elastic-agent
    namespace: placeholder
roleRef:
  kind: ClusterRole
  name: elastic-agent
  apiGroup: rbac.authorization.k8s.io
